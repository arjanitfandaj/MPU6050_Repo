/*
 * MPU6050.c
 *
 *  Created on: Jan 2, 2023
 *      Author: Arjanit
 */


#include "MPU6050.h"
#include "main.h"
//extern I2C_HandleTypeDef hi2c

extern UART_HandleTypeDef huart2;


float Ax = 0.0;
float Ay = 0.0;
float Az = 0.0;


void MPU6050_init(mpu6050_t *obj, I2C_HandleTypeDef *hi2c)
{

	obj->_i2c = hi2c;
	obj->interrupt_flag = 0;
//	memset(obj->_X_data, 0, sizeof(uint32_t));
//	memset(obj->_Y_data, 0, sizeof(uint32_t));
//	memset(obj->_Z_data, 0,sizeof(uint32_t));
	obj->_X_data = 0;
	obj->_Y_data = 0;
	obj->_Z_data = 0;
}


void MPU6050_data_out_ACCEL(uint32_t data_x, uint32_t data_y, uint32_t data_z)
{

	char msg[80];
//	sprintf(msg,"")
	sprintf(msg,"data_x: %.2f\n data_y:%.2f\n data_z:%.2f",data_x,data_y,data_z);
	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 50);

}



void MPU6050_write(mpu6050_t *obj, uint8_t reg, uint8_t * buf, uint16_t buflen)
{
	uint8_t *payload = (uint8_t *)malloc((buflen+1) * sizeof(uint8_t));
	*payload = reg;

	if(buf != NULL && buflen != 0)
	{
		memcpy(payload+1,buf,buflen);

	}

	HAL_I2C_Master_Transmit(obj->_i2c, MPU6050_ADDRESS << 1, payload, buflen, 50);

}



void MPU6050_read(mpu6050_t *obj, uint8_t reg, uint8_t *buf, uint16_t buflen)
{
//	uint8_t data = 0;
	uint8_t reg_address = reg;

	HAL_I2C_Master_Transmit(obj->_i2c, MPU6050_ADDRESS<<1, &reg_address, 1, 50);
	HAL_I2C_Master_Receive(obj->_i2c, MPU6050_ADDRESS << 1, buf, buflen, 50);

}



void MPU6050_PWR_Config(mpu6050_t * obj)
{
	uint8_t data = 0x00;

	MPU6050_write(obj, PWR_MGMT_1, &data, 1);

}



void MPU6050_SMPL_DIV(mpu6050_t * obj)
{
	uint8_t data = 0x07;

	MPU6050_write(obj, SMPLRT_DIV, &data, 1);

}



void MPU6050_ACCEL_CFG(mpu6050_t * obj,afs_sel_t afs_select)
{
	uint8_t data;

	MPU6050_read(obj, ACCEL_CONFIG, &data, 1);

	data = ((data & 0xE7) | afs_select << 3);

	MPU6050_write(obj, ACCEL_CONFIG, &data, 1);

}

void MPU6050_GYRO_CFG(mpu6050_t * obj,fs_sel_t fs_select)
{
	uint8_t data;

	MPU6050_read(obj, GYRO_CONFIG, &data, 1)l

	MPU6050_write(obj, GYRO_CONFIG, &data, 1);

}



void MPU6050_FIFO_EN(mpu6050_t *obj, fifo_en_t fifo_en)
{

	uint8_t config = 0x00;
	config = ((config & 0x00) | 0x01 << fifo_en);
	MPU6050_write(obj, FIFO_EN, &config, 1);


}


void MPU6050_READ_ACCEL_DATA(mpu6050_t * obj)
{
	int8_t data[6];

	uint8_t check;
	char msg[80];


//	MPU6050_read(obj, ACCEL_XOUT_H, &data, 6);
	MPU6050_read(obj, WHO_AM_I, &check, 1);

	if(check == 104){


	MPU6050_read(obj,ACCEL_XOUT_H,&data,6);


	obj->_X_data = (int16_t)(data[0] << 8 | data[1]);
	obj->_Y_data = (int16_t)(data[2] << 8 | data[3]);
	obj->_Z_data = (int16_t)(data[4] << 8 | data[5]);

	Ax = obj->_X_data/16384.0;
	Ay = obj->_Y_data/16384.0;
	Az = obj->_Z_data/16384.0;

	sprintf(msg,"\nX:%f\nY:%f\nZ:%f\n",Ax,Ay,Az);

//	MPU6050_data_out_ACCEL(Ax,Ay,Az);
	HAL_UART_Transmit(&huart2, (uint8_t *)msg, strlen(msg), 50);
	HAL_UART_Transmit(&huart2, (uint8_t *)"----------------------------------", strlen("----------------------------------"), 50);
	}
	else{
		HAL_UART_Transmit(&huart2, (uint8_t*)"NO data was given", strlen("NO data was given"), 100);
	}
}


